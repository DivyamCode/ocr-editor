Introduction

A computer is one of the most remarkable machines invented by man. Most other machines have
a very narrow purpose. A watch shows time, a camera takes pictures, a truck carries goods from
one point to another, an electron microscope shows magnified views of very small objects. Some of
these machines are much larger than a computer, and many much more expensive, but a computer
is much, much more complex and interesting in the kind of uses it can be put to. Indeed, many of
these machines, from a watch to an electron microscope typically might contain a computer inside
them, performing some of the most vital functions of each machine. The goal of this book is to
explain how a computer can possibly be used for so many purposes, and many more.

Viewed one way, a computer is simply an electrical circuit; a giant, complex electrical circuit
but a circuit nevertheless. Computers have been made using mechanical gears, or fluidics device
but all that is mostly of historical importance. For practical purposes, today, it is fine to regard a
computer as an electrical circuit. Parts of this circuit are capable of receiving data from the external
world, remembering it so that it can be reproduced later, processing it, and sending the results back
to the external world. By data we could mean different things. For example, it could mean some
numbers you type from the keyboard of a computer. Or it could mean electrical signals a computer
can receive from a sensor which senses temperature, pressure, light intensity and so on. The word
process might mean something as simple as calculating the average of the sequence of numbers
you type from the keyboard. It could also mean something much more complex: e.g. determining
whether the signals received from a light sensor indicate that there is some movement in the vicinity
of the sensor. Finally, by “send data to the external world” we might mean something as simple
as printing the calculated average on the screen of your computer so that you can read it. Or we
could mean activating a beeper connected to your computer if the movement detected is deemed
suspicious. Exactly which of these actions happen is decided by a program fed to the computer.

It is the program which distinguishes a computer from most other machines; by installing different
programs the same computer can be made to behave in dramatically different ways. How to develop
these programs is the subject of this book. In this chapter, we will begin by seeing an example of
a program. It turns out that we can understand, or even develop (typically called write) programs
without knowing a lot about the specific circuits that the computer contains. Learning to write
programs is somewhat similar to how one might learn to drive a car; clearly one can learn to
drive without knowing how exactly an automobile engine works. Indeed, not only will you be able
understand the program that we show you, but you will immediately be able to write some simple
programs.

There are many languages using which programs can be written. The language we will use in
this book is the C++ programming language, invented in the early 1980s by Bjarne Stroustrup. For
the initial part of the book, we will not use the bare C++ language, but instead augment it with a
package called Simplecpp. How to install this package is explained in Appendix ??. This package
was developed to make C++ appear more friendly and more fun to people who are starting to
learn C++. To use the driving metaphor again, it could be said that C++ is like a complex racing
car. When you are learning to drive, it is better to start with a simpler vehicle, in which there
aren’t too many confusing controls. Also, standard C++ does not by default contain the ability to
draw pictures. The package Simplecpp does contain this feature. We thus expect that by using the
Simplecpp package it will be easier and more fun to learn the language. But in a few chapters (by
Section 77), you will outgrow Simplecpp and be able to use standard C++ (like “the pros”), unless
of course you are using the graphics features.

 

 

1 Also it is appropriate to think of our own brain as a computer made out of biological material, i.e. neurons or
neural cells.
